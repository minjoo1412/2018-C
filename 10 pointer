#include <stdio.h>

int main() {
	//포인터 : 특정 변수의 주소를 저장해 놓은 변수
	int a = 20;


	int *ptr_a;//포인터(가리킬 변수의 형태 + * + 변수이름)
	
	ptr_a = &a;//& = 주소, &a = a의 주소값
	
	printf("a의 값 : %d \n", a);
	printf("a의 주소값 : %d \n", &a);
	printf("ptr_a에 저장된 값 : %d \n", ptr_a);
	printf("ptr_a가 가리키는 변수의 값 : %d\n", *ptr_a);
	printf("\n");

	int b = 30;
	int *ptr;

	ptr = &a;
	printf("%d\n", *ptr);

	ptr = &b;			//포인터 값을 b의 주소로 덮어씌움
	printf("%d\n", *ptr);

	*ptr = 50;			//b의 값을 덮어씌움
	printf("%d\n", b);
	printf("\n");

	int **ptr2;			//포인터의 포인터
	ptr2 = &ptr;

	printf("b의 값 : %d \n", b);
	printf("&b의 값 : %d \n", &b);

	printf("ptr의 값 : %d \n", ptr);
	printf("&ptr의 값 : %d \n", &ptr);

	printf("ptr2의 값 : %d \n", ptr2);
	printf("**ptr2의 값 : %d \n", **ptr2);
	printf("\n");


	int *ptr3 = &b;//포인터를 바로 변수의 주소로 선언할 수 있음

	printf("ptr3 : %d\n", ptr3);
	printf("ptr3 + 1 : %d\n", ptr3 + 1);//4가 더해짐 == int값

	int arr1[10] = {1, 1, 1, 1, 2, 2, 2, 2, 3, 3};

	printf("arr1의 값 = %d\n", arr1);//arr[0]의 주소값, arr+1은 arr[1]
	for (int i = 0; i < 10; i++) {
		printf("&arr1[%d] = %d\n", i, &arr1[i]);
		printf("%d \n", *(arr1 + i));//arr1[i] == arr1 + i
	}


	printf("%d  ", &arr1);
	printf("%d\n", &arr1 + 1);	//40차이 = 배열의 크기가 4(int) * 10(10개) 이기때문

	int arr2[3] = { 1,2,3 };
	int(*ptr4)[3];//길이 3인 int 형 배열을 가리키는 포인터를 선언
	ptr4 = &arr2;

	//배열포인터
	for (int i = 0; i < 3; i++) {
		printf("%d  ", (*ptr4)[i]);
	}
	printf("\n");

}
